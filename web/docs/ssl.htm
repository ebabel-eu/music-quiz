<!DOCTYPE html>
<!-- saved from url=(0088)http://greengeckodesign.com/blog/2013/06/15/creating-an-ssl-certificate-for-node-dot-js/ -->
<html class="js video maskImage placeholder wf-cutivemono-n4-active wf-merriweathersans-n4-active wf-quicksand-n4-active wf-active" lang="en"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Creating an SSL Certificate for Node.js - greengecko design</title>
<meta name="author" content="Jason John Jaeger">
<meta name="description" content="I had to seek out several different resources to learn how to do this right so I figured I’d put it all together in case it helps someone else …">
 
<meta name="HandheldFriendly" content="True">
<meta name="MobileOptimized" content="320">
<meta name="viewport" content="width=device-width,minimum-scale=1,maximum-scale=1">
<link rel="canonical" href="http://greengeckodesign.com/blog/2013/06/15/creating-an-ssl-certificate-for-node-dot-js">
<link href="http://greengeckodesign.com/favicon.ico" rel="icon">
<link href="./ssl_files/screen.css" media="screen, projection" rel="stylesheet" type="text/css">
<link href="http://feeds.feedburner.com/greengeckodesign/blog" rel="alternate" title="greengecko design" type="application/atom+xml">
<script src="./ssl_files/webfont.js" type="text/javascript" async=""></script><script type="text/javascript" async="" src="./ssl_files/ga.js"></script><script src="./ssl_files/modernizr-2.0.js"></script>
 
<link href="./ssl_files/css" rel="stylesheet" type="text/css">
<link href="./ssl_files/css(1)" rel="stylesheet" type="text/css">
<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-2180518-1']);
    _gaq.push(['_setSiteSpeedSampleRate', 75]);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
<link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Cutive+Mono%7CMerriweather+Sans%7CQuicksand&subset=latin,latin-ext,latin,latin-ext,latin"><script type="text/javascript" async="" src="./ssl_files/embed.js"></script><script src="./ssl_files/alfie.f51946af45e0b561c60f768335c9eb79.js" async="" charset="UTF-8"></script></head>
<body class="no-sidebar"><script type="text/javascript">//<![CDATA[try{(function(a){var b="http://",c="greengeckodesign.com",d="/cdn-cgi/cl/",e="img.gif",f=new a;f.src=[b,c,d,e].join("")})(Image)}catch(e){}//]]></script>
<header role="banner"><hgroup>
<h1><a href="http://greengeckodesign.com/"><span class="icon-greengeckodesign2013logo" aria-hidden="true"></span>greengecko design</a></h1>
<h2>The Web Presence of <a href="http://greengeckodesign.com/jjj" title="about me">Jason John Jaeger</a>.</h2>
</hgroup>
</header>
<nav role="navigation"><ul class="subscription" data-subscription="rss">
<li><a href="http://feeds.feedburner.com/greengeckodesign/blog" rel="subscribe-rss" title="subscribe via RSS">RSS <span aria-hidden="true" class="icon-feed"></span></a></li>
</ul>
<ul class="main-navigation">
<li><a href="http://greengeckodesign.com/">Blog</a></li>
<li><a href="http://greengeckodesign.com/menumatic">MenuMatic</a></li>
<li><a href="http://greengeckodesign.com/forums">Forums</a></li>
</ul>
</nav>
<div id="main">
<div id="content">
<div>
<article class="paper hentry" role="article">
<header>
<h1 class="entry-title">Creating an SSL Certificate for Node.js</h1>
<p class="meta">
<time datetime="2013-06-15T21:28:00-05:00" pubdate="" data-updated="true">Jun 15<span>th</span>, 2013</time>
</p>
</header>
<div class="entry-content"><p>I had to seek out several different resources to learn how to do this right so I figured I’d put it all together in case it helps someone else</p>
<p> The Goal: To Create a Secure Certificate and set up a node.js (express 3) project which uses it for local development purposes</p>
 
<h2>Step 1: Install OpenSSL</h2>
<p><strong>Ubuntu:</strong></p>
<figure class="code"><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo apt-get install openssl</span></code></pre></td></tr></tbody></table></div></figure>
<p>
<strong>Windows</strong><br>
<cite>Reference: <a href="http://bit.ly/YBqs5y" target="_blank" title="How to Install OpenSSL on Windows">http://bit.ly/YBqs5y</a></cite><br>
Basically just install <a target="_blank" href="http://www.cygwin.com/">cygwin</a> , and search for and enable OpenSSl packages.
</p>
<h2>Step 2: Create a Certificate Authority</h2>
<p><cite>Reference: <a href="http://bit.ly/11PaGjU" target="_blank" title="Create a Certificate Authority">http://bit.ly/11PaGjU</a></cite><br></p>
<figure class="code"><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">openssl genrsa -des3 -out ca.key 1024
</span><span class="line">openssl req -new -key ca.key -out ca.csr
</span><span class="line">openssl x509 -req -days 365 -in ca.csr -out ca.crt -signkey ca.key</span></code></pre></td></tr></tbody></table></div></figure>
<h2>Step 3: Create a Server Certificate</h2>
<cite>Reference: <a href="http://bit.ly/15uTd6I" target="_blank" title="Create a Server Certificate">http://bit.ly/15uTd6I</a></cite>
<figure class="code"><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">openssl genrsa -des3 -out server.key 1024
</span><span class="line">openssl req -new -key server.key -out server.csr</span></code></pre></td></tr></tbody></table></div></figure>
Then, remove the passphrase from the server certificate:<br>
(This step was crucial for me since I was getting an error about the password.)
<figure class="code"><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cp server.key server.key.org
</span><span class="line">openssl rsa -in server.key.org -out server.key</span></code></pre></td></tr></tbody></table></div></figure>
And then, generate your self-signed certificate
<figure class="code"><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</span></code></pre></td></tr></tbody></table></div></figure>
<h2>Step 4: Create a Secure Server in Node</h2>
<figure class="code"><figcaption><span>Server Side</span></figcaption><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">https</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'https'</span><span class="p">),</span>
</span><span class="line"><span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'fs'</span><span class="p">);</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">sslOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">key</span><span class="o">:</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">'./ssl/server.key'</span><span class="p">),</span>
</span><span class="line">  <span class="nx">cert</span><span class="o">:</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">'./ssl/server.crt'</span><span class="p">),</span>
</span><span class="line">  <span class="nx">ca</span><span class="o">:</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">'./ssl/ca.crt'</span><span class="p">),</span>
</span><span class="line">  <span class="nx">requestCert</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">  <span class="nx">rejectUnauthorized</span><span class="o">:</span> <span class="kc">false</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">secureServer</span> <span class="o">=</span> <span class="nx">https</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">sslOptions</span><span class="p">,</span><span class="nx">app</span><span class="p">).</span><span class="nx">listen</span><span class="p">(</span><span class="s1">'3030'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class="line">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"Secure Express server listening on port 3030"</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></tbody></table></div></figure>
<figure class="code"><figcaption><span>Client Side</span></figcaption><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">socket</span> <span class="o">=</span> <span class="nx">io</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="s1">'https://localhost:3030/'</span><span class="p">,{</span><span class="nx">secure</span><span class="o">:</span> <span class="kc">true</span><span class="p">});</span>
</span></code></pre></td></tr></tbody></table></div></figure>
</div>
<footer>
<p class="meta">
<span class="byline author vcard">Posted by <span class="fn">Jason John Jaeger</span></span>
<time datetime="2013-06-15T21:28:00-05:00" pubdate="" data-updated="true">Jun 15<span>th</span>, 2013</time>
<span class="categories">
<a class="category" href="http://greengeckodesign.com/blog/categories/node/">node</a>
</span>
</p>
<div class="sharing">
</div>
<p class="meta">
<a class="basic-alignment left" href="http://greengeckodesign.com/blog/2013/05/19/upcoming-changes/" title="Previous Post: Upcoming Changes">« Upcoming Changes</a>
</p>
</footer>
</article>
<section>
<h1>Comments</h1>
<div id="disqus_thread" aria-live="polite"><iframe id="dsq-2" data-disqus-uid="2" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./ssl_files/saved_resource.htm" style="width: 100% !important; border: none !important; overflow: hidden !important; height: 889px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe><iframe id="dsq-indicator-north" data-disqus-uid="indicator-north" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" style="width: 850px !important; border: none !important; overflow: hidden !important; top: 0px !important; min-width: 850px !important; max-width: 850px !important; position: fixed !important; z-index: 2147483646 !important; height: 29px !important; min-height: 29px !important; max-height: 29px !important; display: none !important;"></iframe><iframe id="dsq-indicator-south" data-disqus-uid="indicator-south" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" style="width: 850px !important; border: none !important; overflow: hidden !important; bottom: 0px !important; min-width: 850px !important; max-width: 850px !important; position: fixed !important; z-index: 2147483646 !important; height: 29px !important; min-height: 29px !important; max-height: 29px !important; display: none !important;"></iframe></div>
</section>
</div>
</div>
</div>
<footer role="contentinfo"><p>
Copyright © 2013 - Jason John Jaeger -
<span class="credit">Powered by <a href="http://octopress.org/">Octopress</a></span>
</p>
<script src="./ssl_files/jquery.min.js"></script>
<script>!window.jQuery && document.write(unescape('%3Cscript src="/javascripts/libs/jquery.min.js"%3E%3C/script%3E'))</script>
<script src="./ssl_files/script.min.js" type="text/javascript"></script></footer>
<script type="text/javascript">
//console.log('greengeckodesign');

      var disqus_shortname = 'greengeckodesign';
      
        
        //var disqus_developer = 1; // this would set it to developer mode
        var disqus_identifier = 'http://greengeckodesign.com/blog/2013/06/15/creating-an-ssl-certificate-for-node-dot-js/';
        var disqus_url = 'http://greengeckodesign.com/blog/2013/06/15/creating-an-ssl-certificate-for-node-dot-js/';
        var disqus_script = 'embed.js';
      
    (function () {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = 'http://' + disqus_shortname + '.disqus.com/' + disqus_script;
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    }());
</script>


<iframe frameborder="0" scrolling="no" style="border: 0px; display: none; background-color: transparent;"></iframe><div id="GOOGLE_INPUT_CHEXT_FLAG" input="null" input_stat="{&quot;tlang&quot;:true,&quot;tsbc&quot;:true,&quot;pun&quot;:true,&quot;mk&quot;:false,&quot;ss&quot;:true}" style="display: none;"></div></body></html>